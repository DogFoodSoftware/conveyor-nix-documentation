<!-- breadcrumb: (Stack-Reference)Stack Reference|(Nix-Primer)Nix Primer|Concepts and Terminology -->
<section id="Overview">
  <div id="slides">
    <ul class="slides-container">
      <li>
	<h2>It's all about derivations.</h2>
	<ul class="p">
	  <li>Installing a package builds a derivation.</li>
	  <li>A derivation is absolutely static and immutable. (Or at least it
	    should be.)</li>
	  <li>In a word, nix is a derivations factory.</li>
	</ul>
      </li>
      <li class="largest">
	<h2>Nix doesn't care about versions&#8230;</h2>
	<div class="p">
	  Nix doesn't care about versions, but you do. So nix tries to
	  accomodate.
	  <ul>
	    <li>Nix does not use the concopt of 'versions' internally.</li>
	    <li>It does however support naming conventions that allow users to
	      refer to versions.</li>
	    <li>Nix package names include the version.</li>
	    <li>'<code>foo</code>' becomes '<code>foo-&lt;highest
	    version&gt;</code>'; e.g., with '<code>gcc-3.8</code>' and
	    '<code>gcc-4.8</code>', '<code>gcc</code>' &lt;=&gt;
	    '<code>gcc-4.8</code>'.</li>
	  </ul>
	</div>
      </li>
      <li>
	<h2>.. so don't trust versions too far.</h2>
	<ul class="p">
	  <li>Changing the package spec or build inputs changes the
	    derivation.</li>
	  <li>The derivation is a result of the current system; the advertised
	    package version is really just talking about the
	    '<code>src</code>' input.</li>
	</ul>
      </li>
      <li>
	<h2>Package delivery guaranteed.</h2>
	<ul class="p">
	  <li>Any functional change to a version specification or any input /
	    dependency yields a unique derivations.</li>
	  <li>For a given set of build inputs and a particular version
	    specification, a build should be dependently
	    repeatable.</li>
	</ul>
      </li>
      <li>
	<h2>A distribution is a set of packages.</h2>
	<ul class="p">
	  <li>A distribitution is just a set of package specifications.</li>
	  <li>Source is typically retrieved by the package specification, not
	    retrieved. So even large distributions aren't very large
	    bit-wise.</li>
	</ul>
      </li>
    </ul>
    <nav class="slides-navigation">
      <a href="#" class="next">
        <i class="bi-icon bi-icon-chevron-right"></i>
      </a>
      <a href="#" class="prev">
        <i class="bi-icon bi-icon-chevron-left"></i>
      </a>
    </nav>
  </div>
</section>
