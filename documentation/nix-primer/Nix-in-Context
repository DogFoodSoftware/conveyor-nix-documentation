<!-- breadcrumb: (Stack-Reference)Stack Reference|(Nix-Primer)Nix Primer|Nix in Context -->
<section id="Overview" class="slides-section">
  <div id="slides">
    <ul class="slides-container">
      <li>
	<h2>Nix is a package manager.</h2>
	<ul class="p">
	  <li>It does all the stuff other package managers do.</li>
	  <li>Can use source and binaries interchangebly.</li>
	  <li>Completely and naturally solves depedency hell.</li>
	</ul>
      </li>
      <li>
	<h2>The bad parts.</h2>
	<ul>
	  <li>The nix disto and nixpkgs in particular are still
	    somewhat unstable and immature compared to some distros.</li>
	  <li>The nix language is theoretically elegant, but it's
	    packaged like a math equation. Unless that's already your
	    mode of thought, be prepared to spend a little time wrapping
	    your head around things.</li>
	</ul>
      </li>
      <li>
	<h2>Nix works in user space.</h2>
	<ul class="p">
	  <li>Therefore, nix plays nice with other package managers.</li>
	  <li>Nix need not replace; it can augment.</li>
	  <li>Nix can be iteratively integarted.</li>
	</ul>
      </li>
      <li class="largest">
	<h2>Can handle development dependencies.</h2>
	<ul class="p">
	  <li>Nix makes a great dependency manager.</li>
	  <li>Nix can often improve and simplify dependency management
	    functions in project build tools like Maven, Jenkins and
	    Gradle.</li>
	  <li>Nix can provide simple and robust dependency management
	    for 'pure' build systems like
	    make. See <a href="/documentation/nix-primer/Use-Cases#Augment-Build-Systems">augmenting
	    build systems</a>.</li>
	  <li>Nix can elegantly integrate the development build and
	    production setup.</li>
	</ul>
      </li>
      <li>
	<h2>May improve public distribution.</h2>
	<ul class="p">
	  <li>Nix channels provide a relatively convenient method of
	    binary distribution.</li>
	  <li>Of course, the overhead here is installing a nix base
	    system, so it's only applicable to large applications.</li>
	  <li>For more, see <a href="/documentation/nix-primer/Use-Cases#Micro-Distributions">micro-distribution use case.</a></li>
	</ul>
      </li>
    </ul>
    <nav class="slides-navigation">
      <a href="#" class="next">
        <i class="bi-icon bi-icon-chevron-right"></i>
      </a>
      <a href="#" class="prev">
        <i class="bi-icon bi-icon-chevron-left"></i>
      </a>
    </nav>
  </div>
</section>
